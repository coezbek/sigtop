name: build

on: push

jobs:
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]

    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install build-essential libssl-dev pkg-config

    - name: build
      run: make

    - name: run
      run: |
        set +e
        ./sigtop
        test $? = 1

  macos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
        ssl: [libressl, openssl@1.1, openssl@3]

    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: install dependencies
      # Also install make because Xcode provides GNU make 3.81 which is too old
      run: |
        brew update
        brew install make pkg-config ${{ matrix.ssl }}

    - name: build
      # Set PKG_CONFIG_PATH as per the instructions from "brew install" and
      # https://docs.brew.sh/How-to-Build-Software-Outside-Homebrew-with-Homebrew-keg-only-Dependencies
      run: |
        PKG_CONFIG_PATH=$(brew --prefix)/opt/${{ matrix.ssl }}/lib/pkgconfig \
          gmake

    - name: run
      run: |
        set +e
        ./sigtop
        test $? = 1

  # https://github.com/vmactions/freebsd-vm
  freebsd:
    strategy:
      fail-fast: false
      matrix:
        ssl: [libressl, openssl]

    runs-on: macos-12

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: run vm
      uses: vmactions/freebsd-vm@v0
      with:
        usesh: true
        prepare: pkg install -y pkgconf ${{ matrix.ssl }}
        run: |
          uname -a
          make
          set +e
          ./sigtop
          test $? = 1

  # https://github.com/vmactions/solaris-vm
  solaris:
    runs-on: macos-12

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: run vm
      uses: vmactions/solaris-vm@v0
      with:
        prepare: pkgutil -iy gcc5core gmake libssl_dev pkgconfig
        run: |
          uname -a
          CC=gcc gmake
          set +e
          ./sigtop
          test $? = 1

  # https://github.com/cygwin/cygwin-install-action
  cygwin:
    runs-on: windows-latest

    steps:
    - name: configure git
      run: git config --global core.autocrlf input

    - name: checkout
      uses: actions/checkout@v2

    - name: install Cygwin
      uses: cygwin/cygwin-install-action@master
      with:
        packages: gcc-core libssl-devel make pkg-config

    - name: install and run sigtop
      shell: C:\cygwin\bin\bash.exe -elo pipefail -o igncr '{0}'
      run: |
        uname -a
        cd $GITHUB_WORKSPACE
        make install
        set +e
        sigtop
        test $? = 1
