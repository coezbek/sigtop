.\" Copyright (c) 2021 Tim van der Molen <tim@kariliq.nl>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd December 9, 2022
.Dt SIGTOP 1
.Os
.Sh NAME
.Nm sigtop
.Nd export messages from Signal Desktop
.Sh SYNOPSIS
.Nm sigtop
.Ar command
.Op Ar argument ...
.Sh DESCRIPTION
.Nm
is a utility to export messages, attachments and other data from Signal
Desktop.
.Pp
.Nm
needs access to the directory where Signal Desktop stores its data.
By default,
.Nm
tries the following locations:
.Bl -tag -width Ds
.It macOS
.Pa "~/Library/Application Support/Signal" .
.It Cygwin (Windows)
.Pa $APPDATA\eSignal .
The
.Ev APPDATA
environment variable is usually set by Cygwin, and usually to
.Pa C:\eUsers\e Ns Em <username> Ns Pa \eAppData\eRoaming .
.It Other systems
.Pa $XDG_CONFIG_HOME/Signal ,
or
.Pa ~/.config/Signal
if
.Ev XDG_CONFIG_HOME
is unset or empty.
.Pp
If this directory does not exist,
.Nm
tries the locations used by the unofficial Snap and Flatpak versions of Signal
Desktop.
These locations are
.Pa ~/snap/signal-desktop/current/.config/Signal
and
.Pa ~/.var/app/org.signal.Signal/config/Signal ,
respectively.
.El
.Pp
A different location for the Signal Desktop directory can be specified using
the
.Fl d
option (see below).
.Pp
The commands are as follows:
.Bl -tag -width Ds
.Tg check
.It Ic check-database Op Fl d Ar signal-directory
.D1 Pq Alias: Ic check
.Pp
Check the integrity of the encrypted Signal Desktop database.
The check is performed using the SQLite/SQLCipher
.Cm cipher_integrity_check
and
.Cm integrity_check
pragmas.
.Tg att
.It Xo
.Ic export-attachments
.Op Fl Ll
.Op Fl d Ar signal-directory
.Op Fl s Ar interval
.Op Ar directory
.Xc
.D1 Pq Alias: Ic att
.Pp
Export attachments.
The attachment files are created in separate directories, one for each
conversation.
These directories are created in
.Ar directory ,
or in the current directory if
.Ar directory
is not specified.
.Pp
Signal Desktop stores attachments in unencrypted files.
.Nm
can copy these files, or create hard links or symbolic links to them.
By default, attachments are copied.
If the
.Fl L
option is specified, hard links are created.
If the
.Fl l
option is specified, symbolic links are created.
.Pp
By default, all attachments are exported.
The
.Fl s
option may be used to export only the attachments that were sent in the
specified time interval.
See the
.Sx TIME INTERVALS
section below for details.
.Tg db
.It Ic export-database Oo Fl d Ar signal-directory Oc Ar file
.D1 Pq Alias: Ic db
.Pp
Decrypt and export the Signal Desktop database to
.Ar file .
The exported database is a regular SQLite database.
.Tg msg
.It Xo
.Ic export-messages
.Op Fl d Ar signal-directory
.Op Fl f Ar format
.Op Fl s Ar interval
.Op Ar directory
.Xc
.D1 Pq Alias: Ic msg
.Pp
Export messages.
The messages are written to separate files, one for each conversation.
These files are created in
.Ar directory ,
or in the current directory if
.Ar directory
is not specified.
.Pp
The
.Fl f
option may be used to specify the output format.
The following output formats are supported:
.Bl -tag -width Ds
.It Cm json
Messages are written in JSON format.
The JSON data is copied directly from the Signal Desktop database, so its
structure may differ between Signal Desktop versions.
.It Cm text
Messages are written as plain text.
This is the default.
.El
.Pp
By default, all messages are exported.
The
.Fl s
option may be used to export only the messages that were sent in the specified
time interval.
See the
.Sx TIME INTERVALS
section below details.
.El
.Sh TIME INTERVALS
A time interval is specified using the format
.Sm off
.Sq Oo Ar time Oc Cm \&, Oo Ar time Oc ,
.Sm on
and a time is specified using the format
.Sm off
.Sq Ar yyyy Cm - Ar mm Cm - Ar dd Cm T Ar hh Cm \&: Ar mm Cm \&: Ar ss .
.Sm on
The endpoints of the interval are inclusive, and either endpoint may be
omitted.
Examples of time intervals are:
.Bd -literal -offset indent
2020-01-01T00:00:00,2020-12-31T23:59:59
2016-10-13T21:43:27,
,2038-01-19T03:14:07
.Ed
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
Export all messages to the directory
.Pa messages :
.Bd -literal -offset indent
$ sigtop export-messages messages
.Ed
.Pp
Use the shorter command alias:
.Bd -literal -offset indent
$ sigtop msg messages
.Ed
.Pp
Export all messages in JSON format to the directory
.Pa json :
.Bd -literal -offset indent
$ sigtop msg -f json json
.Ed
.Pp
Export all attachments sent at or after 12:34:56 on 23 January 2021 to the
directory
.Pa attachments :
.Bd -literal -offset indent
$ sigtop att -s 2021-01-23T12:34:56, attachments
.Ed
.Pp
Export the database from a Signal Desktop directory on a Windows disk mounted
at
.Pa /mnt :
.Bd -literal -offset indent
$ sigtop db -d /mnt/Users/Alice/AppData/Roaming/Signal signal.db
.Ed
.Sh SEE ALSO
.Lk https://github.com/tbvdm/sigtop
.Sh AUTHORS
The
.Nm
utility was written by
.An Tim van der Molen Aq Mt tim@kariliq.nl .
